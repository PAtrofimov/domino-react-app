{"version":3,"sources":["components/TopBar.js","components/HalfCard.js","components/Card.js","components/BottomBar.js","components/RightBar.js","App.js","serviceWorker.js","index.js"],"names":["TopBar","onRotateLeft","ev","_this","props","handleRotateLeft","onRotateRight","handleRotateRight","onNewCard","handleNewCard","react_default","a","createElement","className","onClick","this","Component","HalfCard","matrix","0","1","2","3","4","5","6","_this$props","top","value","bottom","createHalfCard","dots","rows","i","j","view","push","concat","key","_this$props2","isCard","classes","Card","angle","animationSpeed","scale","id","style","transition","transform","components_HalfCard","BottomBar","onScale","_ev$target","target","name","handleScale","Object","defineProperty","onSpeed","_ev$target2","handleSpeed","htmlFor","type","min","max","step","onInput","onChange","color","RightBar","handleChooseTop","handleChooseBottom","map","elem","toString","App","state","showCardBar","performRotateLeft","setState","performNewCard","performRotateRight","performChooseTop","_ref","performChooseBottom","_ref2","performScale","_ref3","performSpeed","_ref4","_this$state","components_TopBar","components_Card","components_RightBar","components_BottomBar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f70b50b4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TopBar extends Component {\r\n  onRotateLeft = ev => {\r\n    this.props.handleRotateLeft();\r\n  };\r\n\r\n  onRotateRight = ev => {\r\n    this.props.handleRotateRight();\r\n  };\r\n\r\n  onNewCard = ev => {\r\n    this.props.handleNewCard();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"top-bar\">\r\n        <button className=\"btn-left btn\" onClick={this.onRotateLeft}>\r\n          Left\r\n        </button>\r\n\r\n        <button className=\"btn-new btn\" onClick={this.onNewCard}>\r\n          New domino\r\n        </button>\r\n\r\n        <button className=\"btn-right btn\" onClick={this.onRotateRight}>\r\n          Right\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass HalfCard extends Component {\r\n  matrix = {\r\n    0: [[false, false, false], [false, false, false], [false, false, false]],\r\n    1: [[false, false, false], [false, true, false], [false, false, false]],\r\n    2: [[false, false, true], [false, false, false], [true, false, false]],\r\n    3: [[false, false, true], [false, true, false], [true, false, false]],\r\n    4: [[true, false, true], [false, false, false], [true, false, true]],\r\n    5: [[true, false, true], [false, true, false], [true, false, true]],\r\n    6: [[true, false, true], [true, false, true], [true, false, true]]\r\n  };\r\n\r\n  onClick = ev => {\r\n    const {top, value} = this.props;\r\n    this.props.onClick(top ? {top: value }: {bottom: value });\r\n  };\r\n\r\n  createHalfCard = dots => {\r\n    let rows = [];\r\n    for (let i = 0; i < 3; i++) {\r\n      for (let j = 0; j < 3; j++) {\r\n        let view = dots[i][j] ? \"\" : \"hide\";\r\n        rows.push(<div className={`dot D${i+1}${j+1} ${view}`} key= {`${i+1}${j+1}`}/>);\r\n      }\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  render() {\r\n    let { value, isCard, top } = this.props;\r\n\r\n    if (!value) {\r\n      value = 0;\r\n    }\r\n\r\n    const dots = this.matrix[value];\r\n   \r\n    let classes = \"half-domino\";\r\n    if (isCard) {\r\n      classes += top ? \" half-domino-part1\" : \" half-domino-part2\";\r\n    }\r\n\r\n    return (\r\n      <div className={classes} onClick={this.onClick}>\r\n        {this.createHalfCard(dots)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HalfCard;\r\n","import React, { Component } from \"react\";\r\nimport HalfCard from \"./HalfCard\";\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    const { top, bottom, angle, animationSpeed, scale } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"domino\"\r\n        id=\"domino-card\"\r\n        style={{\r\n          transition: `transform ${animationSpeed}s`,\r\n          transform: `scale(${scale}) rotate(${angle}deg)`\r\n        }}\r\n      >\r\n        <HalfCard value={top} isCard={true} top={true} onClick={null} />\r\n        <div className=\"line\" />\r\n        <HalfCard value={bottom} isCard={true} top={false} onClick={null} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\n\r\nclass BottomBar extends Component {\r\n  onScale = ev => {\r\n    const {name, value} = ev.target;\r\n    this.props.handleScale({[name]: value});\r\n  };\r\n\r\n  onSpeed = ev => {\r\n    const {name, value} = ev.target;\r\n    this.props.handleSpeed({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    const { scale, animationSpeed } = this.props;\r\n\r\n    return (\r\n      <div className=\"bottom-bar\">\r\n        <div className=\"slider-scale slider\">\r\n          <label htmlFor=\"id_scale\">Scale domino</label>\r\n          <input\r\n            name=\"scale\"\r\n            type=\"range\"\r\n            min={1}\r\n            max={2}\r\n            step={0.2}\r\n            value={scale}\r\n            onInput={this.onScale}\r\n            onChange={this.onScale}\r\n            id=\"id_scale\"\r\n          />\r\n          <span style={{ color: 'red' }}>{scale}</span>\r\n        </div>\r\n        <div className=\"slider-speed slider\">\r\n          <label htmlFor=\"id_speed\">Anim. speed</label>\r\n          <input\r\n            name=\"animationSpeed\"\r\n            type=\"range\"\r\n            min={1}\r\n            max={5}\r\n            step={1}\r\n            value={animationSpeed}\r\n            onInput={this.onSpeed}\r\n            onChange={this.onSpeed}\r\n            id=\"id_speed\"\r\n          />\r\n          <span style={{ color: 'green' }}>{animationSpeed} cек</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BottomBar;\r\n","import React, { Component } from \"react\";\r\nimport HalfCard from \"./HalfCard\";\r\n\r\nclass RightBar extends Component {\r\n\r\n\r\n  render() {\r\n\r\n    const {handleChooseTop, handleChooseBottom} = this.props;\r\n\r\n    return (\r\n      <div className=\"bar-cards column\">\r\n        <div className=\"top-cards row\">\r\n          {[0, 1, 2, 3, 4, 5, 6].map(elem => (\r\n            <HalfCard value={elem} top={true} key={\"top\" + elem.toString()}  onClick={handleChooseTop}/>\r\n          ))}\r\n        </div>\r\n        <div className=\"bottom-cards row\">\r\n          {[0, 1, 2, 3, 4, 5, 6].map(elem => (\r\n            <HalfCard value={elem} top={false} key={\"bottom\" + elem.toString()}  onClick={handleChooseBottom}/>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RightBar;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TopBar from \"./components/TopBar\";\nimport Card from \"./components/Card\";\nimport BottomBar from \"./components/BottomBar\";\nimport RightBar from \"./components/RightBar\";\n\nclass App extends Component {\n  state = {\n    top: 0,\n    bottom: 0,\n    angle: 0,\n    scale: 1,\n    animationSpeed: 1,\n    showCardBar: false\n  };\n\n  step = 90;\n\n  performRotateLeft = () => {\n    let angle = this.state.angle - this.step;\n    this.setState({ angle });\n  };\n\n  performNewCard = () => {\n    this.setState({ showCardBar: !this.state.showCardBar });\n  };\n\n  performRotateRight = () => {\n    let angle = this.state.angle + this.step;\n    this.setState({ angle });\n  };\n\n  performChooseTop = ({ top }) => {\n    this.setState({ top });\n  };\n\n  performChooseBottom = ({ bottom }) => {\n    this.setState({ bottom });\n  };\n\n  performScale = ({ scale }) => {\n    this.setState({ scale });\n  };\n\n  performSpeed = ({ animationSpeed }) => {\n    this.setState({ animationSpeed });\n  };\n\n  render() {\n    const { top, bottom, scale, animationSpeed, angle, showCardBar } = this.state;\n    return (\n      <div className=\"App\">\n        <TopBar\n          handleRotateLeft={this.performRotateLeft}\n          handleRotateRight={this.performRotateRight}\n          handleNewCard={this.performNewCard}\n        />\n\n        <div className=\"card-wrapper\" id=\"container\">\n          <Card\n            top={top}\n            bottom={bottom}\n            scale={scale}\n            angle = {angle}\n            animationSpeed={animationSpeed}\n          />\n\n          {showCardBar && <RightBar\n            handleChooseTop={this.performChooseTop}\n            handleChooseBottom={this.performChooseBottom}\n          />}\n        </div>\n\n        <BottomBar\n          scale={scale}\n          animationSpeed={animationSpeed}\n          handleScale={this.performScale}\n          handleSpeed={this.performSpeed}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}